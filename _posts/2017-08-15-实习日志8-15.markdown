---
layout: post
title: "沟通与交流"
excerpt: "有一种感觉，其实从第一周来学了很多很多东西之后。慢慢的，每天学的东西会变少，变的稳定。  

今天，正式开始了新的一周的新的工作。  

上午的话基本上都是在用例评审中度过了。用例评审，就是鹏飞哥将用例写出来之后，在叫上项目组内其他的同事。一起对用例进行评审。目的就是为了测试用例的合理性和效用。  

用例评审中，大家都对每一个用例都认真的分析了。或是通过或是得出修改方案。没有一点马虎。这种认真工作的精神是很值得学习的。  

然后下午就进行了微隔离模块测试。这里就遇到一个问题，就是我配了规则之后，却一直无法生效。然后看了详细的信息发现，接收端接收的是另外一个ip发过去的包，我十分奇怪，于是去问鹏飞哥，鹏飞哥一下子就看出来，我的ip和目的主机的ip不在同一网段，这个给目的主机发数据包的ip地址，是他们那个网段的网关。    "
categories: [Log]
comments: true

---

### 实习日志8-14

#### 没有工作得日子

**今日主题：**  
**沟通与交流**

有一种感觉，其实从第一周来学了很多很多东西之后。慢慢的，每天学的东西会变少，变的稳定。  

今天，正式开始了新的一周的新的工作。  

上午的话基本上都是在用例评审中度过了。用例评审，就是鹏飞哥将用例写出来之后，在叫上项目组内其他的同事。一起对用例进行评审。目的就是为了测试用例的合理性和效用。  

用例评审中，大家都对每一个用例都认真的分析了。或是通过或是得出修改方案。没有一点马虎。这种认真工作的精神是很值得学习的。  

然后下午就进行了微隔离模块测试。这里就遇到一个问题，就是我配了规则之后，却一直无法生效。然后看了详细的信息发现，接收端接收的是另外一个ip发过去的包，我十分奇怪，于是去问鹏飞哥，鹏飞哥一下子就看出来，我的ip和目的主机的ip不在同一网段，这个给目的主机发数据包的ip地址，是他们那个网段的网关。  

这里就涉及到一个tcp协议的问题了，既然tcp连接是点对点服务，那么为什么这个链接的源地址不是我的主机地址，而是他的网关地址呢? 

Q：因为进行了路由转发，改变了源地址。所以相当于是目的地址和他的网关建立了tcp连接。

（这好像和我们脑袋里想的有点不一样。既然这样，那tcp连接中，目的主机发还给源主机的ip报文源主机又是怎么收到的呢? 目的主机知道的源主机的ip是网关ip，那么回复的报文也是回复给网关，那网关又是如何把这个报文给真正的源主机呢?）  

然后今天还学到了一个知识，就是关于重启删除是如何实现的。

**重启删除的实现原理**：  
1. 如果有任何应用程序需要使用延迟删除/重命名功能，那么该应用程序会使用一个特殊的参数MOVEFILE_DELAY_UNTIL_REBOOT 来命令Win32 API 函数
MoveFileEx()在系统里面注册一个延迟删除/重命名操作。注册的记录放在注册表HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SessionManager\PendingFileRenameOperations 和PendingFileRenameOperations2键值下面。该键值是一个REG_MULTI_SZ 类型的键值，注册编编辑器无法直接编辑这种类型的键值。   
警告！不要使用注册表编辑器直接编辑这个键值，这样会造成系统无法判定是该执行延迟删除操作还是延迟重命名操作。  
2. 操作系统在下次启动的时候，由smss.exe 对上述的注册表键值进行读取分析并完成相应的操作。需要注意的是，在执行延迟操作的时候，Win32 子系统并没有启动，也就是说延迟操作是在没有Win32 子系统干扰的情形下完成的。这样设计的一个最大好处就是可以替换任何受Win32 子系统保护的文件。  
3. 如果上述键值指定了一个文件需要被删除，那么smss.exe 将执行删除操作，如果指定的是重命名操作，那么smss.exe 执行的是重命名操作。注意！如果执行重命名操作的时候，和新文件名同名的文件存在，那么原有的文件将被覆盖掉。例如：假设有一个文件C:\1.DLL 存在，而延迟重命名里面的记录是把C:\2.DLL 改名为C:\1.DLL，那么原来的C:\1.DLL 将被C:\2.DLL 覆盖掉。    
4. 当所有的记录完成以后，系统自动把上述的注册表键值删除掉，不会存留任何痕迹的。现在说说软件开发人员是如何使用这个功能的。以安装Windows Service Pack 为例。在Service Pack 安装完成以后，安装程序肯定会提示用户重新启动。其实，重新启动的过程就是一个执行延迟删除/重命名的过程由于在安装Service Pack 的时候，很多文件不能够被新版本的文件替换，如果碰到这个情况，安装程序将会把新版本文件改名并放到和旧版本文件同样的目录下面，然后在系统里面注册一个延迟重命名操作。系统在下次启动的时候，将执行这个延迟重命名操作以便让旧版本文件被新版本文件替换掉从而完成Service Pack 的安装。对于延迟删除来说，和延迟重命名类似。如果发现有一个文件不能够被立即删除，则软件会注册一个延迟删除，让操作系统在下次启动的时候自动把文件删除掉。  

然后今天还基本理顺了一下EDR的部署原理。

然后晚上上来的是用例分析的课，说的是软件测试用例设计。  

也就是**测试点覆盖的方法**：

具体方法有8种，这里说6种。  
1. 等价类
2. 边界值设计
3. 正交组和
4. 业务逻辑设计（因果关系设计）
5. 容量专项设计
6. 匹配类设计


基本是靠这几种方法，去达到覆盖测试用例的目的。  

over

