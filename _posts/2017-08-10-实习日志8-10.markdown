---
layout: post
title: "我爱学习，学习爱我"
excerpt: "技术增长的速度要大于工作难度的增长速度，这样才能挤出时间学习。同时学习方法也很重要，要在有限的时间里学习对自己工作最有用的知识。（精确的定位到自己迫切需要学习的知识)  "
categories: [Log]
comments: true

---

### 实习日志8-10

#### 我爱学习，学习爱我

**今日主题：**  
**技术增长的速度要大于工作难度的增长速度，这样才能挤出时间学习。同时学习方法也很重要，要在有限的时间里学习对自己工作最有用的知识。（精确的定位到自己迫切需要学习的知识）**

我把今天命名为“The first 学习日”。 估计在实习期间应该还会有很多个这样的学习日吧。那是因为现在的工作量还不多，工作难度也不大。自己现有的知识可以轻松的解决现有的工作和现有的问题，而且自己遇到的困难问题，也是在同事和导师的经验覆盖之下的。所以现在才能挤出时间来学习。  

对于当下而言，最好的工作，就是花时间多学一些知识，一些预备的知识。以备今后的工作需要，这样之后也可以快速的高效率的完成工作，也就可以构成一个良性循环。  

快速完成工作 → → → 花时间学习今后会用到的知识。→ → → 快速完成将来的工作  → → → 花时间学习今后会用到的知识。

那接下来说说今天学习的一些东西吧。  

----
 ### 首先是对于BUG的一些学习

对于测试而言，他们的工作产出就是把一个个的用例落实，给他定义一个状态。或是通过或是不通过或是无需检查。  

然后这里用来计量工作产出的一个单位，就是一个个的BUG。  

比如通过提交一个Bug的状态，就可以认识到Bug 的严重性，可以查明Bug的来源等便于开发人员分析和解决的信息。  

那么第一：**Bug 比较重要的几个字段分别是：**

** 1.严重性**  
** 2.执行分析**  
** 3.案例分析**

第二 ：**要注意Bug的关联和备注  **  

关联可以让我们方便的跟踪bug，并且分析风险，方便统计  


第三： **Bug的等级**

分别是： low ，medium,high,urgent

第四：**Bug的状态**

分别是：
new，open,fixed,fixed_已审核，rejected,duplicate,halt_1,halt_2,reopen,重现中，won't fix，close_Dup,closed

其中new ， reopen， 重现中是测试有权限设置的几个状态。

new：发现了一个bug ，提交给开发人员  
reopen：开发人员解决了你提交过的bug后，但是你觉得还是有问题，bug依然存在  
重现中：测试人员正在重现bug  

----
### 高压线

也就是测试工作一定不能触及到的一些点，就是工作一定不能出纰漏的地方。  

1. 工作不能超时  
2. 流程步骤一定不能简化  
3. 发现Bug不提Bug  
4. 流程和产出最晚时间点前没做有用的模板。  
5. 不能出现测试漏测

----

### 测试工作的整体步骤  

  1. 范围覆盖  
  把业务分成多个大的模块
  2. 测试点覆盖  
  从各个模块中找出每一个点
  3. 用例质量  
  写出具体可执行的可靠的用例
  4. 质量落地  
  执行完成后判断产品质量是否达标  

然后在其中穿插各种方法论，是测试人员的基本功。 每一个步骤下，都有相对应的方法。  

----

### 自动化技术

浏览器操作：watir/selenium  
windows:autoit,sikuli   
HTTP POST 模拟浏览器请求  
SSH链接Linux进行操作  
curl/wget  
脚本语言：ruby，python  

----

以上就是今天所学习的一些东西，都是很表面的东西，没有深入学习什么。  

但是，这样了解表面之后，在以后的工作中就可以很快定位到自己想要学习的东西，就可以快速的找到工作中遇到的问题究竟属于哪一个技术问题。  

就如同今晚交流会上一位大神（www,去晚几分钟，没听到名字） 所说  ：  

在工作中学习，是无法抽出很多时间学习的。因为工作量很大，每个人都在有限的时间里和大量的工作做斗争，所以挤出来的时间是很可贵的，需要把挤出来的时间花在最应该花的地方，这就需要一个很好的学习方法。把需要学习的点，记录成关键字，然后去学习这个关键字的有关目录。去通过你记录的关键字构建一颗学习树出来。先把有限的时间花在最需要学习的，最迫切，最能解决工作中问题的地方。然后在有多余的时间，再去学习其他的这一棵树上的其他东西。  去把着一颗树填满。  

OVER
